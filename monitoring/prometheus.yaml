apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: quiz-royale-monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'quiz-royale'
        environment: 'production'

    rule_files:
      - "quiz_royale_rules.yml"

    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - alertmanager:9093

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'quiz-royale-frontend'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - quiz-royale
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: quiz-royale-frontend
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

      - job_name: 'quiz-royale-backend'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - quiz-royale
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: quiz-royale-backend
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

      - job_name: 'quiz-royale-redis'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - quiz-royale
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: quiz-royale-redis

      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/$1/proxy/metrics

      - job_name: 'kubernetes-cadvisor'
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor

  quiz_royale_rules.yml: |
    groups:
      - name: quiz_royale_tournament_alerts
        rules:
          - alert: HighTournamentErrorRate
            expr: rate(http_requests_total{job="quiz-royale-backend", status=~"5.."}[5m]) > 0.1
            for: 5m
            labels:
              severity: critical
              service: quiz-royale-backend
            annotations:
              summary: "High error rate in Quiz Royale backend"
              description: "Error rate is {{ $value | humanizePercentage }} for the last 5 minutes"

          - alert: HighTournamentLatency
            expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="quiz-royale-backend"}[5m])) > 0.5
            for: 5m
            labels:
              severity: warning
              service: quiz-royale-backend
            annotations:
              summary: "High latency in Quiz Royale backend"
              description: "95th percentile latency is {{ $value }}s for the last 5 minutes"

          - alert: TournamentPlayerDropout
            expr: increase(tournament_players_eliminated_total[5m]) > 50
            for: 2m
            labels:
              severity: warning
              service: quiz-royale-backend
            annotations:
              summary: "High player dropout rate in tournaments"
              description: "{{ $value }} players eliminated in the last 5 minutes"

          - alert: WebSocketConnectionFailure
            expr: increase(websocket_connection_failures_total[5m]) > 10
            for: 2m
            labels:
              severity: critical
              service: quiz-royale-backend
            annotations:
              summary: "WebSocket connection failures"
              description: "{{ $value }} WebSocket connection failures in the last 5 minutes"

          - alert: ActiveTournamentOverload
            expr: active_tournaments_count > 50
            for: 5m
            labels:
              severity: warning
              service: quiz-royale-backend
            annotations:
              summary: "Too many active tournaments"
              description: "{{ $value }} active tournaments, performance may be impacted"

          - alert: RedisConnectionFailure
            expr: redis_up == 0
            for: 1m
            labels:
              severity: critical
              service: quiz-royale-redis
            annotations:
              summary: "Redis connection failure"
              description: "Redis is down for Quiz Royale"

          - alert: HighMemoryUsage
            expr: (container_memory_working_set_bytes{pod=~"quiz-royale-.*"} / container_spec_memory_limit_bytes) > 0.9
            for: 5m
            labels:
              severity: warning
            annotations:
              summary: "High memory usage"
              description: "Memory usage is {{ $value | humanizePercentage }} for {{ $labels.pod }}"

          - alert: PodCrashLooping
            expr: rate(kube_pod_container_status_restarts_total{namespace="quiz-royale"}[5m]) > 0
            for: 5m
            labels:
              severity: critical
            annotations:
              summary: "Pod crash looping"
              description: "Pod {{ $labels.pod }} is crash looping"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: quiz-royale-monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:v2.45.0
        ports:
        - containerPort: 9090
          name: web
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: storage-volume
          mountPath: /prometheus
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time=15d'
          - '--web.enable-lifecycle'
          - '--web.enable-admin-api'
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config-volume
        configMap:
          name: prometheus-config
      - name: storage-volume
        emptyDir: {}
      securityContext:
        fsGroup: 65534
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: quiz-royale-monitoring
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
    name: web
  type: LoadBalancer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: quiz-royale-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: quiz-royale-monitoring
